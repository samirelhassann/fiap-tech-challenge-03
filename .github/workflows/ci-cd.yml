name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  run-unit-tests:
    name: üß™ Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn run test


  # sonarcloud-analysis:
  #   name: üîç SonarCloud Analysis
  #   needs: run-unit-tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0 
        
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: 11
  #         distribution: 'temurin'
      
  #     - name: Cache SonarCloud packages
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.sonar/cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
      
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       with:
  #         projectBaseDir: ./
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  update-image:
    name: üìù Update Image
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Azure Credentials
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Build and push Docker image to ACR
        run: |
          VERSION_TAG=$(git rev-parse --short HEAD)
          ACR_REGISTRY=${{ secrets.ACR_REGISTRY }}
          IMAGE_NAME=${{ secrets.IMAGE_NAME }}
          docker build -t $ACR_REGISTRY/$IMAGE_NAME:$VERSION_TAG .
          docker push $ACR_REGISTRY/$IMAGE_NAME:$VERSION_TAG
          docker tag $ACR_REGISTRY/$IMAGE_NAME:$VERSION_TAG $ACR_REGISTRY/$IMAGE_NAME:latest
          docker push $ACR_REGISTRY/$IMAGE_NAME:latest